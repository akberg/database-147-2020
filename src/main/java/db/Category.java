package db;

import java.sql.*;
import java.util.NoSuchElementException;

public class Category extends ActiveDomainObject {

    private String cat_name;

    public Category(int id, String name) {
        this.ID = id;
        this.cat_name = name;
    }

    public Category(String name) {
        this(-1, name);
    }

    /**
     * @return the cat_name
     */
    public String getCat_name() {
        return cat_name;
    }

    public Category get(String constraint) {
        Category res;
        try {
            Statement stmt = conn.createStatement();
            // Select all from an object satisfying contstraints
            ResultSet rs = stmt.executeQuery("select * from Category where " + constraint);

            if (!rs.next()) {
                throw new NoSuchElementException("Ingen treff.");
            } 
            res = new Category(rs.getInt("cat_id"), rs.getString("cat_name"));

            if (rs.next()) {
                throw new NoSuchElementException("Mer enn ett treff!");
            }

            return res;

        } catch (SQLException e) {
            System.out.println("Feil under databaseoperasjon "+e);
            return null;
        }
    }

    @Override
    public void save() {
        try {
            PreparedStatement stmt;
            if (ID == -1) {
                stmt = conn.prepareStatement("insert into Category (cat_name) values (?)", Statement.RETURN_GENERATED_KEYS);
            } else {
                // Only update if object already exists in db
                stmt = conn.prepareStatement("update Category set cat_name=? where cat_id=" + this.ID);
            }
            stmt.setString(1, this.cat_name);
            stmt.executeUpdate();
            conn.commit();
            
            if (ID == -1) {
                // Update with autogenerated pk
                ResultSet rs = stmt.getGeneratedKeys();
                rs.next();
                this.ID = rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.println("db error during update of category: "+e);
        }
    }
    
}